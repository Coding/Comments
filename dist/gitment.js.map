{"version":3,"sources":["../src/gitment.js"],"names":["scope","extendRenderer","instance","renderer","container","targetContainer","render","theme","defaultTheme","e","state","firstChild","replaceChild","appendChild","Gitment","localStorage","getItem","token","setItem","oauthUri","oauth","redirect_uri","window","location","href","oauthParams","Object","assign","response_type","stringify","options","useTheme","id","split","title","document","link","desc","labels","perPage","maxCommentHeight","labelUsingHash","lang","user","userInfo","accessToken","JSON","parse","fromCache","removeItem","error","meta","comments","undefined","reactions","commentReactions","currentPage","query","code","client_id","client_secret","search","replacedUrl","origin","pathname","hash","history","replaceState","isLoggingIn","post","access_token","then","console","log","data","update","catch","alert","createIssue","loadComments","renderers","keys","forEach","Promise","all","loadMeta","loadUserInfo","text","mode","identity","length","owner","repo","author","blog_theme","getIdentity","substring","concat","content","resolve","getIssue","issue","comments_url","pageCount","Math","ceil","push","get","creator","issues","reject","page","pageSize","list","logout","login","global_key","avatar_url","avatar","startsWith","loginLink","commentId","delete","module","exports"],"mappings":"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","file":"gitment.js","sourcesContent":["import { autorun, observable } from 'mobx'\n\nimport {\n  LS_ACCESS_TOKEN_KEY,\n  LS_USER_KEY,\n  NOT_INITIALIZED_ERROR,\n  CODING_URL,\n} from './constants'\nimport { getTargetContainer, http, Query } from './utils'\nimport defaultTheme from './theme/default'\n\nimport md5 from 'md5'\n\nconst scope = 'project:topics,user'\n\nfunction extendRenderer(instance, renderer) {\n  instance[renderer] = (container) => {\n    const targetContainer = getTargetContainer(container)\n    const render = instance.theme[renderer] || instance.defaultTheme[renderer]\n\n    autorun(() => {\n      const e = render(instance.state, instance)\n      if (targetContainer.firstChild) {\n        targetContainer.replaceChild(e, targetContainer.firstChild)\n      } else {\n        targetContainer.appendChild(e)\n      }\n    })\n\n    return targetContainer\n  }\n}\n\nclass Gitment {\n  get accessToken() {\n    return localStorage.getItem(LS_ACCESS_TOKEN_KEY)\n  }\n  set accessToken(token) {\n    localStorage.setItem(LS_ACCESS_TOKEN_KEY, token)\n  }\n\n  get loginLink() {\n    const oauthUri = CODING_URL.oauth\n    const redirect_uri = this.oauth.redirect_uri || window.location.href\n\n    const oauthParams = Object.assign({\n      scope,\n      redirect_uri,\n      response_type: 'code',\n    }, this.oauth)\n\n    return `${oauthUri}${Query.stringify(oauthParams)}`\n  }\n\n  constructor(options = {}) {\n    this.defaultTheme = defaultTheme\n    this.useTheme(defaultTheme)\n\n    Object.assign(this, {\n      id: window.location.href.split('?')[0],\n      title: window.document.title,\n      link: window.location.href,\n      desc: '',\n      labels: [],\n      theme: defaultTheme,\n      oauth: {},\n      perPage: 20,\n      maxCommentHeight: 250,\n      labelUsingHash: false,\n      lang: 'zh-CN',\n    }, options)\n\n    this.useTheme(this.theme)\n\n    const user = {}\n    try {\n      const userInfo = localStorage.getItem(LS_USER_KEY)\n      if (this.accessToken && userInfo) {\n        Object.assign(user, JSON.parse(userInfo), {\n          fromCache: true,\n        })\n      }\n    } catch (e) {\n      localStorage.removeItem(LS_USER_KEY)\n    }\n\n    this.state = observable({\n      user,\n      error: null,\n      meta: {},\n      comments: undefined,\n      reactions: [],\n      commentReactions: {},\n      currentPage: 1,\n    })\n\n    const query = Query.parse()\n    if (query.code) {\n      const { client_id, client_secret } = this.oauth\n      const code = query.code\n      delete query.code\n      const search = Query.stringify(query)\n      const replacedUrl = `${window.location.origin}${window.location.pathname}${search}${window.location.hash}`\n      history.replaceState({}, '', replacedUrl)\n\n      Object.assign(this, {\n        id: replacedUrl.split('?')[0],\n        link: replacedUrl,\n      }, options)\n\n      this.state.user.isLoggingIn = true\n      http.post(CODING_URL.access_token, {\n          code,\n          client_id,\n          client_secret,\n        }, '')\n        .then(data => {\n          console.log(data)\n          this.accessToken = data.access_token\n          this.update()\n        })\n        .catch(e => {\n          this.state.user.isLoggingIn = false\n          alert(e)\n        })\n    } else {\n      this.update()\n    }\n  }\n\n  init() {\n    return this.createIssue()\n      .then(() => this.loadComments())\n      .then(comments => {\n        this.state.error = null\n        return comments\n      })\n  }\n\n  useTheme(theme = {}) {\n    this.theme = theme\n\n    const renderers = Object.keys(this.theme)\n    renderers.forEach(renderer => extendRenderer(this, renderer))\n  }\n\n  update() {\n    return Promise.all([this.loadMeta(), this.loadUserInfo()])\n      .then(() => Promise.all([\n        this.loadComments()\n      ]))\n      .catch(e => this.state.error = e)\n  }\n\n  markdown(text) {\n    return http.post('https://api.github.com/markdown', {\n      text,\n      mode: 'gfm',\n    })\n  }\n\n  getIdentity() {\n    const { id, labelUsingHash } = this\n    let identity = id;\n    if (labelUsingHash || identity.length > 200) {\n      identity = md5(identity)\n    }\n    return identity\n  }\n\n  createIssue() {\n    const { owner, repo, title, link, desc, labels, author, blog_theme } = this\n\n    const identity = this.getIdentity()\n    \n\n    return http.post(`/api/user/${owner}/project/${repo}/topics`, {\n      title: title.length > 63 ? title.substring(0, 60) + '...' : title,\n      labels: labels.concat(['gitment', identity]),\n      content: `${link}\\n\\n${desc}`,\n      author,\n      theme: blog_theme,\n    })\n      .then((meta) => {\n        this.state.meta = meta\n        return meta\n      })\n  }\n\n  getIssue() {\n    if (this.state.meta.id) return Promise.resolve(this.state.meta)\n\n    return this.loadMeta()\n  }\n\n  post(content) {\n    const { author, blog_theme } = this\n    return this.getIssue()\n      .then(issue => http.post(issue.comments_url, { content, author, theme: blog_theme }, ''))\n      .then(data => {\n        this.state.meta.comments++\n        const pageCount = Math.ceil(this.state.meta.comments / this.perPage)\n        if (this.state.currentPage === pageCount) {\n          this.state.comments.push(data)\n        }\n        this.update()\n        return data\n      })\n  }\n\n  loadMeta() {\n    const { owner, repo } = this\n    return http.get(`/api/user/${owner}/project/${repo}/topics`, {\n        creator: owner,\n        labels: this.getIdentity(),\n      })\n      .then(issues => {\n        if (!issues.length) return Promise.reject(NOT_INITIALIZED_ERROR)\n        this.state.meta = issues[0]\n        return issues[0]\n      })\n  }\n\n  loadComments(page = this.state.currentPage) {\n    return this.getIssue()\n      .then(issue => http.get(issue.comments_url, { page, pageSize: this.perPage }, ''))\n      .then((comments) => {\n        this.state.comments = comments.list\n        return comments\n      })\n  }\n\n  loadUserInfo() {\n    if (!this.accessToken) {\n      this.logout()\n      return Promise.resolve({})\n    }\n\n    return http.get('/api/account/current_user')\n      .then((user) => {\n        user.login = user.global_key\n        user.avatar_url = user.avatar\n        if (user.avatar_url.startsWith('/')) {\n          user.avatar_url = 'https://coding.net' + user.avatar_url;\n        }\n        this.state.user = user\n        localStorage.setItem(LS_USER_KEY, JSON.stringify(user))\n        return user\n      })\n  }\n\n  login() {\n    window.location.href = this.loginLink\n  }\n\n  logout() {\n    localStorage.removeItem(LS_ACCESS_TOKEN_KEY)\n    localStorage.removeItem(LS_USER_KEY)\n    this.state.user = {}\n  }\n\n  goto(page) {\n    this.state.currentPage = page\n    this.state.comments = undefined\n    return this.loadComments(page)\n  }\n\n  likeAComment(commentId) {\n    if (!this.accessToken) {\n      alert('Login to Like')\n      return Promise.reject()\n    }\n\n    const { author, blog_theme } = this;\n\n    return http.post(`${this.state.meta.comments_url}/${commentId}/upvote`, { author, theme: blog_theme })\n      .then(() => {\n        return this.update()\n\n      })\n  }\n\n  unlikeAComment(commentId) {\n    if (!this.accessToken) return Promise.reject()\n\n    const { author, blog_theme } = this;\n\n    return http.delete(`${this.state.meta.comments_url}/${commentId}/upvote`, { author, theme: blog_theme })\n      .then(() => {\n        return this.update()\n      })\n  }\n}\n\nmodule.exports = Gitment\n"]}